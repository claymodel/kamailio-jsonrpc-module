JSON Module

Matthew Williams

   <matthew@flowroute.com>

Edited by

Jordan Levy

   <jordan@flowroute.com>

   Copyright © 2011 Flowroute LLC (flowroute.com)
     __________________________________________________________________

   Table of Contents

   1. Admin Guide

        1. Overview
        2. Dependencies

              2.1. Kamailio Modules
              2.2. External Libraries or Applications

        3. Exported Parameters

              3.1. remote_host (string)
              3.2. remote_port (int)

        4. Exported Functions

              4.1. jsonrpc_request(method, parameters, routename,
                      result_var)

   List of Examples

   1.1. Set remote_host parameter
   1.2. Set remote_port parameter
   1.3. jsonrpc_request usage

Chapter 1. Admin Guide

   Table of Contents

   1. Overview
   2. Dependencies

        2.1. Kamailio Modules
        2.2. External Libraries or Applications

   3. Exported Parameters

        3.1. remote_host (string)
        3.2. remote_port (int)

   4. Exported Functions

        4.1. jsonrpc_request(method, parameters, routename, result_var)

1. Overview

   This module provides access to json-rpc services (operating over
   TCP/Netstrings).

   This module uses t_suspend() and t_continue() from the TM module.

   Note that after invoking an asyncronous operation, the processing will
   continue later, in another application process. Therefore, do not rely
   on variables stored in private memory, use shared memory if you want to
   get values after the processing is resumend (e.g., $shv(...) or htable
   $sht(...)).

2. Dependencies

   2.1. Kamailio Modules
   2.2. External Libraries or Applications

2.1. Kamailio Modules

   The following modules must be loaded before this module:
     * tm - transaction management.

2.2. External Libraries or Applications

   The following libraries or applications must be installed before
   running Kamailio with this module loaded:
     * libjson - http://metaparadigm.com/json-c/

3. Exported Parameters

   3.1. remote_host (string)
   3.2. remote_port (int)

3.1. remote_host (string)

   The hostname for the remote jsonrpc service.

   Example 1.1. Set remote_host parameter
...
modparam("jsonrpc", "remote_host", "localhost")
...

3.2. remote_port (int)

   The port for the remote jsonrpc service.

   Example 1.2. Set remote_port parameter
...
modparam("jsonrpc", "remote_port", 9999)
...

4. Exported Functions

   4.1. jsonrpc_request(method, parameters, routename, result_var)

4.1.  jsonrpc_request(method, parameters, routename, result_var)

   Invoke the remote 'method' with the given 'parameters'. When the
   response is received, continue processing of the SIP request with the
   route[routename].

   The method, parameters, and routename can be a static string or a
   dynamic string value with config variables.

   The result is stored in the pseudo-variable 'destination'. Since this
   variable is set after the response is recieved, it is possible to use a
   $var for this parameter.

   Since the SIP request handling is resumed in another process, the
   config file execution is lost. As mentioned above, only shared
   variables ($shv, etc) should be used for any value that will be needed
   when the script is resumed.

   Example 1.3. jsonrpc_request usage
...
jsonrpc_request("get_user", {'id': 1234}", "RESPONSE", "$var(result)");
...
route[RESPONSE] {
        xlog("$var(result)");
        send_reply("404", "Not Found");
        exit;
}
...
